# docker-compose.yml
version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    platform: linux/amd64
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=fretron
      # Optimized JVM settings for Apple Silicon
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      # Bootstrap password for first-time setup
      - ELASTIC_USERNAME=admin
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch-7/data
    ports:
      - "9200:9200"
    networks:
      - elastic

    deploy:
      resources:
        limits:
          memory: 2g
   # healthcheck:
     # test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
     # interval: 30s
     # timeout: 10s
     # retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.0
    container_name: kibana
    platform: linux/amd64
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=admin
      - ELASTICSEARCH_PASSWORD=fretron
    ports:
      - "5601:5601"
   # depends_on:
     # elasticsearch:
      #  condition: service_healthy
    networks:
      - elastic

    deploy:
      resources:
        limits:
          memory: 1g
    #healthcheck:
     # test: ["CMD-SHELL", "curl -s http://localhost:5601 >/dev/null || exit 1"]
     # interval: 30s
     # timeout: 10s
     # retries: 5

volumes:
  elasticsearch-data:
    driver: local

networks:
  elastic:
    driver: bridge

