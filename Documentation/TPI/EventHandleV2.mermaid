graph TD
    A[handleScheduledTask task: SchedulerTask] --> B[Get action from task]
    B --> C{Action type}
    C -- TPI_SCHEDULER_ACTION --> D[Get job by ID]
    D --> E[handleJobEvent job: IntegrationJob]
    E --> F{Is job active?}
    F -- Yes --> G[Execute job]
    G --> Init
    G --> H{Job response status}
    H -- 200 --> I[handleSuccessCase job, jobResponse]
    H -- 504 --> J[Get job meta]
    J --> K[Save job]
    K --> L[Schedule fix interval task]
    H -- Other --> M[handleErrorResponse job]
    F -- No --> N[Remove scheduled task]
    I --> O[Update job schedule time]
    M --> O
    O --> P[Log job details]
    N --> P
    P --> Q[End]

    C -- TPI_FAILURE_ALERT_SCHEDULER_ACTION --> R[handleTpiFailureAlertEvent]
    R --> S[Get job metas needing alerts]
    S --> T{Are there job metas?}
    T -- Yes --> U[Send notifications for each job meta]
    U --> V[Reset fail count and alert flag]
    V --> W[End]
    T -- No --> X[Log no job metas found]
    X --> W

    subgraph HandleJobEventFlow
        E
        F
        G
        H
        I
        J
        K
        L
        M
        N
        O
    end

    subgraph HandleSuccessCaseFlow
        I --> Y[Get last response]
        Y --> Z{Is execution type not JOB_TYPE_PREHOOK?}
        Z -- Yes --> AA[Get current vehicles, devices, positions]
        AA --> AB[Compare previous response and produce changes]
        AB --> AC[Produce positions to Kafka]
        AC --> AD[Update job schedule time]
        AD --> AE[End]
        Z -- No --> AF[Log skip for JOB_TYPE_PREHOOK]
        AF --> AE
    end

    subgraph HandleErrorResponseFlow
        M --> AG[Get job meta]
        AG --> AH{Is fail count < max allowed?}
        AH -- Yes --> AI{Is job type TataFleetMan or NSTracker?}
        AI -- Yes --> AJ[Apply retry mechanism]
        AJ --> AK[applyRetryMechanism job]
        AK --> AL[Schedule fix interval task]
        AH -- No --> AM[Set need to send alert]
        AM --> AN[Schedule next failure time]
        AL --> AO[Update job and meta]
        AM --> AO
        AO --> AP[End]
    end

    subgraph applyRetryMechanismFlow
        AK --> A1{Job type}
        A1 -- BaseParser.tataFleetMan --> A2[Log retry start for TataFleetMan]
        A2 --> A3[Get TataFleetMan token]
        A3 --> A4{Is response status 200?}
        A4 -- Yes --> A5[Parse token and update job URL]
        A5 --> A6[Set job properties and log success]
        A4 -- No --> A7[Log token status not 200]
        A3 -- No --> A8[Log could not get token]

        A1 -- BaseParser.nsTracker --> A9[Log retry start for NSTracker]
        A9 --> A10[Get NSTracker token]
        A10 --> A11{Is token not null?}
        A11 -- Yes --> A12[Update job parameters with token]
        A12 --> A13[Set job properties and log success]
        A11 -- No --> A14[Log token retrieval failure]
    end

    subgraph HandleDeleteCaseFlow
        A15[handleDeleteCase job: IntegrationJob] --> A16[Get last response]
        A16 --> A17{Is last response null?}
        A17 -- Yes --> A18[Log error and return]
        A17 -- No --> A19[Delete devices from Kafka]
        A19 --> A20[Delete job and related data]
        A20 --> A21[End]
    end

    subgraph ComparePreviousResponseFlow
        A22[comparePreviousResponseAndProduceChanges] --> A23[Compare old and current vehicles]
        A23 --> A24{Found changes?}
        A24 -- Yes --> A25[Produce changes to Kafka]
        A25 --> A26[End]
        A24 -- No --> A27[Log no changes]
        A27 --> A26
    end

    subgraph CalculatePositionParamsFlow
        A28[calculatePositionParams currentData, lastData] --> A29{Data sizes equal?}
        A29 -- Yes --> A30[Calculate position parameters]
        A30 --> A31[Return updated records]
        A29 -- No --> A32[Return current data]
        A32 --> A31
    end


    subgraph JobExecutor
        Init[Initialize JobExecutionResult]
        Init --> CheckType{Check ExecutionType}
        
        %% Prehook Flow
        CheckType -->|PREHOOK| Prehook[Call applyPrehook]
        Prehook --> WebhookCheck{Is Webhook Active?}
        WebhookCheck -->|Yes| ReturnRetry[Return Status 504]
        WebhookCheck -->|No| ProcessPrehook{Process Prehook Response}
        ProcessPrehook -->|Response null| PrehookError[Set Error Status 401]
        ProcessPrehook -->|Status 200| PrehookSuccess[Set Success Status 200]
        ProcessPrehook -->|Other Status| PrehookFail[Set Error Status 401]
        
        %% Main Job Flow
        CheckType -->|Other| JobType{Check Job Type}
        
        JobType -->|etransSolutions| EtransSol[Get EtransSolutions Vehicle List]
        JobType -->|nsTracker| NSTracker[Get NSTracker Vehicle Location]
        JobType -->|etrans| Etrans[Execute GET Request]
        JobType -->|etransTrackInfo| EtransTrack[Get Etrans Track Info]
        JobType -->|trackingExperts| TrackExp{Check Request Method}
        JobType -->|other| OtherType{Check Request Method}
        
        TrackExp -->|POST| TrackPost[Execute POST Request]
        TrackExp -->|other| TrackError[Set Error Status 400]
        
        OtherType -->|GET| ExecGet[Execute GET Request]
        OtherType -->|POST| ExecPost[Execute POST Request]
        OtherType -->|PUT| ExecPut[Execute PUT Request]
        OtherType -->|other| MethodError[Set Error Status 400]
        
        %% Response Processing
        EtransSol & NSTracker & Etrans & EtransTrack & TrackPost & ExecGet & ExecPost & ExecPut --> ProcessResp{Process Response}
        
        ProcessResp -->|Response null| NullError[Set Error Status 400]
        ProcessResp -->|Status 200| ParseRecords[Parse Vehicle Records]
        ProcessResp -->|Other Status| ResponseError[Set Error Status 401]
        
        ParseRecords --> RecordsCheck{Records Found?}
        RecordsCheck -->|Yes| ProcessPositions[Process Positions]
        RecordsCheck -->|No| ParseError[Throw VehicleParsingException]
        
        ProcessPositions --> PositionsCheck{Positions Valid?}
        PositionsCheck -->|Yes| Success[Set Success Status 200]
        PositionsCheck -->|No| PositionsError[Set Error Status 400]
        
        %% Error Handling
        ParseError --> CatchError[Set Error Status 400]
        
        %% Final Steps
        Success & PrehookSuccess & PrehookError & PrehookFail & NullError & ResponseError & PositionsError & CatchError & ReturnRetry --> Return([Return Result])
    end
